{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","items","setItems","csv","then","res","reverse","className","map","item","i","style","src","pic","source","type","color","event","year","country","state","song","href","url","target","fb","instagram","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAyDeA,MAtDf,WACE,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OANAC,YAAI,kBAAkBC,MAAK,SAAAC,GACrBJ,GACFC,EAASG,EAAIC,cAKf,qBAAKC,UAAU,MAAf,SACE,wBAAOA,UAAU,gDAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,yBAAd,oBACA,oBAAIA,UAAU,yBAAd,qBACA,oBAAIA,UAAU,yBAAd,kBACA,oBAAIA,UAAU,yBAAd,mBACA,oBAAIA,UAAU,yBAAd,oBACA,oBAAIA,UAAU,yBAAd,oBACA,oBAAIA,UAAU,yBAAd,qBACA,oBAAIA,UAAU,yBAAd,oBACA,oBAAIA,UAAU,yBAAd,wBACA,oBAAIA,UAAU,yBAAd,wBACA,oBAAIA,UAAU,yBAAd,sBACA,oBAAIA,UAAU,yBAAd,4BAGJ,gCACCN,GAASA,EAAMO,KAAK,SAACC,EAAKC,GAAN,OACnB,+BACE,oBAAIH,UAAU,yBAAd,SAAuC,qBAAKI,MAAO,CACjD,MAAS,QACT,aAAgB,MAChB,QAAY,QACTC,IAAG,qBAAgBH,EAAKI,IAArB,YACR,oBAAIN,UAAU,yBAAd,SAAwCE,EAAKK,SAC7C,oBAAIP,UAAU,yBAAd,SAAwCE,EAAKM,OAC7C,oBAAIR,UAAU,yBAAd,SAAwCE,EAAKO,QAC7C,oBAAIT,UAAU,yBAAd,SAAwCE,EAAKQ,QAC7C,oBAAIV,UAAU,yBAAd,SAAwCE,EAAKS,OAC7C,oBAAIX,UAAU,yBAAd,SAAwCE,EAAKU,UAC7C,oBAAIZ,UAAU,yBAAd,SAAwCE,EAAKW,QAC7C,oBAAIb,UAAU,yBAAd,SAAwCE,EAAKY,OAC7C,oBAAId,UAAU,yBAAd,SAAuC,mBAAGe,KAAMb,EAAKc,IAAKC,OAAO,SAA1B,0BACvC,oBAAIjB,UAAU,yBAAd,SAAwCE,EAAKgB,IAAM,mBAAGH,KAAMb,EAAKgB,GAAd,oBACnD,oBAAIlB,UAAU,yBAAd,SAAwCE,EAAKiB,WAAa,mBAAGJ,KAAMb,EAAKiB,UAAd,sBAhB5D,eAAiBhB,eCpBZiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.ae73f586.chunk.js","sourcesContent":["import {csv} from \"d3-fetch\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [items, setItems] = useState(null);\n  csv(\"vestuarios.csv\").then(res => {\n    if(!items){\n      setItems(res.reverse());\n    }\n  });\n  \n  return (\n    <div className=\"App\">\n      <table className=\"table-auto border-collapse border border-grey\">\n        <thead>\n          <tr>\n            <th className=\"border border-grey-600\">Imagen</th>\n            <th className=\"border border-grey-600\">Artista</th>\n            <th className=\"border border-grey-600\">Tipo</th>\n            <th className=\"border border-grey-600\">Color</th>\n            <th className=\"border border-grey-600\">Evento</th>\n            <th className=\"border border-grey-600\">Año</th>\n            <th className=\"border border-grey-600\">País</th>\n            <th className=\"border border-grey-600\">Estado</th>\n            <th className=\"border border-grey-600\">Canción</th>\n            <th className=\"border border-grey-600\">referencia</th>\n            <th className=\"border border-grey-600\">facebook</th>\n            <th className=\"border border-grey-600\">instagram</th>\n          </tr>\n        </thead>\n        <tbody>\n        {items && items.map( (item,i) => \n          <tr key={`item-${i}`}>\n            <td className=\"border border-grey-600\"><img style={{\n              'width': '250px',\n              'borderRadius': '8px',\n              'padding' : '.2em'\n              }} src={`img/covers/${item.pic}.jpg`}></img></td>\n            <td className=\"border border-grey-600\">{item.source}</td>\n            <td className=\"border border-grey-600\">{item.type}</td>\n            <td className=\"border border-grey-600\">{item.color}</td>\n            <td className=\"border border-grey-600\">{item.event}</td>\n            <td className=\"border border-grey-600\">{item.year}</td>\n            <td className=\"border border-grey-600\">{item.country}</td>\n            <td className=\"border border-grey-600\">{item.state}</td>\n            <td className=\"border border-grey-600\">{item.song}</td>\n            <td className=\"border border-grey-600\"><a href={item.url} target=\"_blank\">referencia</a></td>\n            <td className=\"border border-grey-600\">{item.fb && <a href={item.fb}>link</a>}</td>\n            <td className=\"border border-grey-600\">{item.instagram && <a href={item.instagram}>link</a>}</td>\n          </tr>\n        )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}